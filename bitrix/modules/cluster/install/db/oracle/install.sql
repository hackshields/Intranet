CREATE TABLE b_cluster_group
(
	ID NUMBER(18),
	NAME VARCHAR2(50 CHAR),

	CONSTRAINT pk_b_cluster_group PRIMARY KEY (ID)
)
/
CREATE SEQUENCE sq_b_cluster_group START WITH 2
/
CREATE OR REPLACE TRIGGER b_cluster_group_insert
BEFORE INSERT
ON b_cluster_group
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_cluster_group.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_cluster_dbnode
(
	ID NUMBER(18),
	ACTIVE CHAR(1 CHAR) DEFAULT 'Y' NOT NULL,
	GROUP_ID NUMBER(18),
	ROLE_ID VARCHAR2(50 CHAR),
	NAME VARCHAR2(50 CHAR),
	DESCRIPTION VARCHAR2(250 CHAR),

	DB_HOST VARCHAR2(250 CHAR),
	DB_NAME VARCHAR2(250 CHAR),
	DB_LOGIN VARCHAR2(50 CHAR),
	DB_PASSWORD VARCHAR2(50 CHAR),

	MASTER_ID NUMBER(18),
	MASTER_HOST VARCHAR2(50 CHAR),
	MASTER_PORT NUMBER(18),

	SERVER_ID VARCHAR2(50 CHAR),
	STATUS VARCHAR2(50 CHAR),
	UNIQID VARCHAR2(50 CHAR),

	SELECTABLE CHAR(1 CHAR),
	WEIGHT NUMBER(18),

	CONSTRAINT pk_b_cluster_dbnode PRIMARY KEY (ID)
)
/
CREATE SEQUENCE sq_b_cluster_dbnode START WITH 2
/
CREATE OR REPLACE TRIGGER b_cluster_dbnode_insert
BEFORE INSERT
ON b_cluster_dbnode
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_cluster_dbnode.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_cluster_webnode
(
	ID NUMBER(18),
	GROUP_ID NUMBER(18),
	NAME VARCHAR2(50 CHAR),
	DESCRIPTION VARCHAR2(250 CHAR),
	HOST VARCHAR2(250 CHAR),
	PORT NUMBER(18),
	STATUS_URL VARCHAR2(250 CHAR),

	CONSTRAINT pk_b_cluster_webnode PRIMARY KEY (ID)
)
/
CREATE SEQUENCE sq_b_cluster_webnode
/
CREATE OR REPLACE TRIGGER b_cluster_webnode_insert
BEFORE INSERT
ON b_cluster_webnode
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_cluster_webnode.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_cluster_table
(
	ID NUMBER(18),
	TIMESTAMP_X DATE,
	MODULE_ID VARCHAR2(50 CHAR),
	TABLE_NAME VARCHAR2(50 CHAR),
	KEY_COLUMN VARCHAR2(50 CHAR),

	FROM_NODE_ID NUMBER(18),
	TO_NODE_ID NUMBER(18),
	REC_COUNT NUMBER(18),
	LAST_ID VARCHAR2(250 CHAR),

	CONSTRAINT pk_b_cluster_table PRIMARY KEY (ID)
)
/
CREATE SEQUENCE sq_b_cluster_table
/
CREATE OR REPLACE TRIGGER b_cluster_table_insert
BEFORE INSERT
ON b_cluster_table
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_cluster_table.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE b_cluster_queue
(
	ID NUMBER(18),
	TIMESTAMP_X DATE,
	GROUP_ID NUMBER(18) NOT NULL,
	COMMAND VARCHAR2(50 CHAR),
	PARAM1 VARCHAR2(255 CHAR),
	PARAM2 VARCHAR2(255 CHAR),
	PARAM3 VARCHAR2(255 CHAR),
	CONSTRAINT pk_b_cluster_queue PRIMARY KEY(ID)
)
/
CREATE INDEX ix_b_cluster_queue_time ON b_cluster_queue(TIMESTAMP_X)
/
CREATE INDEX ix_b_cluster_queue_group ON b_cluster_queue(GROUP_ID)
/
CREATE SEQUENCE sq_b_cluster_queue
/
CREATE OR REPLACE TRIGGER b_cluster_queue_insert
BEFORE INSERT
ON b_cluster_queue
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
	 	SELECT sq_b_cluster_queue.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/
