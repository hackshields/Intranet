CREATE TABLE B_IM_CHAT
(
	ID NUMBER(18) NOT NULL,
	TITLE VARCHAR2(255 CHAR) NULL,
	AUTHOR_ID NUMBER(18) NOT NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_IM_CHAT_1 ON B_IM_CHAT (AUTHOR_ID)
/
CREATE SEQUENCE SQ_B_IM_CHAT
/
CREATE OR REPLACE TRIGGER B_IM_CHAT_insert
BEFORE INSERT
ON B_IM_CHAT
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_IM_CHAT.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/


CREATE TABLE B_IM_MESSAGE
(
	ID NUMBER(18) NOT NULL,
	CHAT_ID NUMBER(18) NOT NULL,
	AUTHOR_ID NUMBER(18) NOT NULL,
	MESSAGE clob NULL,
	MESSAGE_OUT clob NULL,
	DATE_CREATE date NOT NULL,
	EMAIL_TEMPLATE VARCHAR2(255 CHAR) NULL,
	NOTIFY_TYPE NUMBER(2) DEFAULT '0',
	NOTIFY_MODULE VARCHAR2(255 CHAR) NULL,
	NOTIFY_EVENT VARCHAR2(255 CHAR) NULL,
	NOTIFY_TAG VARCHAR2(255 CHAR) NULL,
	NOTIFY_SUB_TAG VARCHAR2(255 CHAR) NULL,
	NOTIFY_TITLE VARCHAR2(255 CHAR) NULL,
	NOTIFY_BUTTONS clob NULL,
	NOTIFY_READ CHAR(1 CHAR) DEFAULT 'N',
	IMPORT_ID NUMBER(18) NULL,
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_IM_MESS_1 ON B_IM_MESSAGE (CHAT_ID)
/
CREATE INDEX IX_IM_MESS_2 ON B_IM_MESSAGE (NOTIFY_TAG, AUTHOR_ID)
/
CREATE INDEX IX_IM_MESS_3 ON B_IM_MESSAGE (NOTIFY_SUB_TAG, AUTHOR_ID)
/
CREATE SEQUENCE SQ_B_IM_MESSAGE
/
CREATE OR REPLACE TRIGGER B_IM_MESSAGE_insert
BEFORE INSERT
ON B_IM_MESSAGE
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_IM_MESSAGE.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/


CREATE TABLE B_IM_RELATION
(
	ID NUMBER(18) NOT NULL,
	CHAT_ID NUMBER(18) NOT NULL,
	MESSAGE_TYPE CHAR(2 CHAR) DEFAULT 'P',
	USER_ID NUMBER(18) NOT NULL,
	START_ID NUMBER(18) DEFAULT '0',
	LAST_ID NUMBER(18) DEFAULT '0',
	LAST_SEND_ID NUMBER(18) DEFAULT '0',
	LAST_READ date NULL,
	STATUS NUMBER(2) DEFAULT '0',
	PRIMARY KEY (ID)
)
/
CREATE INDEX IX_IM_REL_1 ON B_IM_RELATION (CHAT_ID)
/
CREATE INDEX IX_IM_REL_2 ON B_IM_RELATION (USER_ID, MESSAGE_TYPE, STATUS)
/
CREATE INDEX IX_IM_REL_3 ON B_IM_RELATION (USER_ID, MESSAGE_TYPE, CHAT_ID)
/
CREATE INDEX IX_IM_REL_4 ON B_IM_RELATION (USER_ID, STATUS)
/
CREATE INDEX IX_IM_REL_5 ON B_IM_RELATION (MESSAGE_TYPE, STATUS)
/
CREATE SEQUENCE SQ_B_IM_RELATION
/
CREATE OR REPLACE TRIGGER B_IM_RELATION_insert
BEFORE INSERT
ON B_IM_RELATION
FOR EACH ROW
BEGIN
	IF :NEW.ID IS NULL THEN
 		SELECT SQ_B_IM_RELATION.NEXTVAL INTO :NEW.ID FROM dual;
	END IF;
END;
/

CREATE TABLE B_IM_RECENT
(
	USER_ID NUMBER(18) not null,
	ITEM_TYPE char(2 CHAR) default ('P') not null,
	ITEM_ID NUMBER(18) not null,
	ITEM_MID NUMBER(18) not null,
	CONSTRAINT PK_B_IM_RECENT PRIMARY KEY (USER_ID, ITEM_TYPE, ITEM_ID)
)
/
CREATE INDEX IX_IM_REC_1 ON B_IM_RECENT(ITEM_TYPE, ITEM_ID)
/
CREATE SEQUENCE SQ_B_IM_RECENT START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE NOORDER
/
